 aws dynamodb put-item  --table-name ProcessTracker  --item '{
    PK: { S: 'PROCESS#${id}' },
    PID: { N: 1231231231 },
    Command: { S: 'command' },
    Type: { S: 'type' },
    CreatedAt: { S: 'new Date().toISOString()' }
  }'

aws dynamodb put-item --table-name BackupJobs-BackUpAndRestore  --item '{ "jobId": { "S": "asdfasdfasdfasdfads" }, "orgId": { "S": "source" }, "objects": { "L": [ { "S": "Account" } ] }, "backupType": { "S": "full" }, "schedule": { "S": "cron(0 2 * * ? *)" }, "status": { "S": "active" }, "lastRun": { "NULL": true }, "lastResult": { "NULL": true } }'

aws dynamodb put-item --table-name ProcessLogTable-BackUpAndRestore --item "{\"PK\": {\"S\": \"PROCESS#001\"}, \"PID\": {\"N\": \"1231231231\"}, \"Command\": {\"S\": \"my-command\"}, \"Type\": {\"S\": \"batch\"}, \"CreatedAt\": {\"S\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"}}"
aws dynamodb put-item \
  --table-name JobStatusTable-BackUpAndRestore \
  --item "{\"id\": {\"S\": \"PROCESS#001\"}, \"object\": {\"S\": \"1231231231\"}, \"PID\": {\"S\": \"my-command\"}, \"status\": {\"S\": \"batch\"}}"

aws dynamodb get-item --table-name JobStatusTable-BackUpAndRestore --key '{""object"": {""S"": ""Account""}, ""orgId"": {""S"": ""tp2""}, ""status"": {""S"": ""success""}}'


aws dynamodb query --table-name JobStatusTable-BackUpAndRestore --index-name ByOrgObjectStatus --key-condition-expression "orgId = :org and #obj =:obj" --filter-expression  "#sta =:status" --expression-attribute-names '{\"#obj\": \"object\",\"#sta\":\"status\"}' --expression-attribute-values '{\":org\":{\"S\":\"tp2\"},\":obj\":{\"S\":\"Account\"},\":status\":{\"S\":\"success\"}}'

sudo bash -c 'nohup node app.js > app.log 2>&1 &'

cd Project-BR
node -e "fetch('http://localhost:3000/api/orgs').then(res => res.json()).then(console.log)"
node connection.js POST addNewOrg source https://qpmsint2-dev-ed.my.salesforce.com '00D6A000000tN5R!AR8AQGBHUkgq3ZPjUkZ2V_0JXueAyl3blyK47Dxz2175YvLWOOoZfQkDVrn.WVCF1GxKiUpvwk.JBktdbgPGkkK75F.7AjkJ'

node connection.js POST addNewOrg tp2 https://qualityzetp2-dev-ed.my.salesforce.com '00D1U0000011Wan!AQEAQHu7PamkjuZQD_22CrTMk3.9ntsdUzz0VcKDurjaKKJnS48nNAdV'


node -e "fetch('http://localhost:3000/api/addNewOrg', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ type: ['Account'], orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))";

node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['Account'], orgId:'source',backupType:'Differential' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))";

node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['ContentVersion'], orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))";


node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['Account'], orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))";



node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['Account'], cloud:'platform', orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))";

0 2 * * * node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['Account'], orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))" 
0 2 * * * node -e "fetch('http://localhost:3000/api/backup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ objects: ['Account'], orgId:'source' }) }).then(res => res.json()).then(data => console.log(data)).catch(err => console.error(err))" >> /home/ubuntu/backup.log 2>&1