AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 instance with full access to S3, DynamoDB, and custom ports open

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to SSH into the instance
    Type: AWS::EC2::KeyPair::KeyName

  VpcId:
    Description: VPC Id to launch resources in
    Type: AWS::EC2::VPC::Id

  BucketEncryptionType:
    Type: String
    Description: Choose encryption for the S3 bucket
    Default: AES256
    AllowedValues:
      - AES256
      - aws:kms
      - none

  EC2DeletionPolicy:
    Type: String
    Default: Retain
    AllowedValues: [Retain, Delete]
    Description: DeletionPolicy for EC2 instance

  S3DeletionPolicy:
    Type: String
    Default: Retain
    AllowedValues: [Retain, Delete]
    Description: DeletionPolicy for S3 bucket

  DynamoDeletionPolicy:
    Type: String
    Default: Retain
    AllowedValues: [Retain, Delete]
    Description: DeletionPolicy for DynamoDB table

Conditions:
  UseEncryption: !Not [!Equals [!Ref BucketEncryptionType, none]]
  UseKmsEncryption: !Equals [!Ref BucketEncryptionType, aws:kms]
  DeleteEC2: !Equals [!Ref EC2DeletionPolicy, Delete]
  DeleteS3: !Equals [!Ref S3DeletionPolicy, Delete]
  DeleteDynamo: !Equals [!Ref DynamoDeletionPolicy, Delete]

Resources:

  QPMSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, HTTPS, and port 3000
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  QPMSIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: EC2AppAccessRole

  QPMSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref QPMSIAMRole
      InstanceProfileName: EC2AppInstanceProfile

  QPMSEC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::DeletionPolicy: !If [DeleteEC2, Delete, Retain]
    Properties:
      ImageId: ami-020cba7c55df1f615
      InstanceType: t2.micro
      IamInstanceProfile: !Ref QPMSInstanceProfile
      SecurityGroupIds:
        - !Ref QPMSSecurityGroup
      Tags:
        - Key: Name
          Value: QPMSEC2WithAccess
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt install -y nodejs git unzip nginx
          npm install -g @salesforce/cli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          npm install -g @aws-sdk/client-s3 @aws-sdk/client-dynamodb @aws-sdk/lib-dynamodb
          cd /home/ubuntu
          git clone https://github.com/balu-bunny/Project-BR.git
          cd Project-BR
          npm init -y
          npm install express
          npm install -g pm2
          pm2 start app.js
          pm2 save
          pm2 startup

          TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600)

          PUBLIC_DNS=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-hostname)

          cat > /etc/nginx/sites-available/default <<EOF
          server {
              listen 80;
              server_name \$PUBLIC_DNS;
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
          }
          EOF
          systemctl restart nginx
          systemctl enable nginx
          apt install -y certbot python3-certbot-nginx
          certbot --nginx --non-interactive --agree-tos --redirect \
            --email your-email@example.com \
            -d \$PUBLIC_DNS

  QPMSS3Bucket:
    Type: AWS::S3::Bucket
    Metadata:
      AWS::CloudFormation::DeletionPolicy: !If [DeleteS3, Delete, Retain]
    Properties:
      BucketName: !Sub "myapp-bucket-${AWS::Region}-${AWS::AccountId}"
      Tags:
        - Key: Name
          Value: QPMSAppBucket
      BucketEncryption: !If
        - UseEncryption
        - ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: !If
                  - UseKmsEncryption
                  - aws:kms
                  - AES256
        - !Ref AWS::NoValue

  QPMSDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Metadata:
      AWS::CloudFormation::DeletionPolicy: !If [DeleteDynamo, Delete, Retain]
    Properties:
      TableName: JobTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      Tags:
        - Key: Name
          Value: QPMSAppTable

Outputs:
  EC2InstanceId:
    Description: The ID of the EC2 instance
    Value: !Ref QPMSEC2Instance

  S3BucketName:
    Description: The name of the created S3 bucket
    Value: !Ref QPMSS3Bucket

  DynamoDBTableName:
    Description: The name of the created DynamoDB table
    Value: !Ref QPMSDynamoDBTable
