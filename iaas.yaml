AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 instance with full access to S3, DynamoDB, and custom ports open

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to SSH into the instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:

  DefaultVPC:
    Type: AWS::EC2::VPC::Id

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, HTTPS, and port 3000
      VpcId: !Ref DefaultVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  MyIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: EC2AppAccessRole

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyIAMRole
      InstanceProfileName: EC2AppInstanceProfile

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c55b159cbfafe1f0  # Amazon Linux 2 (update per region)
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref MyInstanceProfile
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: MyEC2WithAccess
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y

          # Install Node.js
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt install -y nodejs

          # Install Git and Unzip
          apt install -y git unzip

          # Install Salesforce CLI
          npm install -g @salesforce/cli

          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

          # Install AWS SDKs globally
          npm install -g @aws-sdk/client-s3 @aws-sdk/client-dynamodb @aws-sdk/lib-dynamodb

          # Clone your Node.js app from GitHub
          cd /home/ubuntu
          git clone https://github.com/your-username/your-repo.git
          cd your-repo

          # Initialize Node project (if not already)
          npm init -y

          # Install Express and other dependencies
          npm install express

          # Install and configure PM2
          npm install -g pm2
          pm2 start app.js
          pm2 save
          pm2 startup


  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "myapp-bucket-${AWS::Region}-${AWS::AccountId}"
      Tags:
        - Key: Name
          Value: MyAppBucket

  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyAppTable
      BillingMode: PAYPERREQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      Tags:
        - Key: Name
          Value: MyAppTable

Outputs:
  EC2InstanceId:
    Description: The ID of the EC2 instance
    Value: !Ref MyEC2Instance

  S3BucketName:
    Description: The name of the created S3 bucket
    Value: !Ref MyS3Bucket

  DynamoDBTableName:
    Description: The name of the created DynamoDB table
    Value: !Ref MyDynamoDBTable
